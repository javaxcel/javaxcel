<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.javaxcel</groupId>
    <artifactId>javaxcel</artifactId>
    <version>0.9.2</version>
    <packaging>pom</packaging>

    <modules>
        <module>core</module>
        <module>styler</module>
    </modules>

    <name>Javaxcel</name>
    <description>Supporter for export and import of Excel file</description>
    <url>https://github.com/javaxcel/javaxcel</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://opensource.org/licenses/Apache-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>imsejin</name>
            <email>hackeres123@gmail.com</email>
            <timezone>Asia/Seoul</timezone>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/javaxcel/javaxcel-core.git</url>
        <connection>scm:git:${project.scm.url}</connection>
        <developerConnection>${project.scm.connection}</developerConnection>
        <tag>${project.version}</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <!-- General properties -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Provided dependency version -->
        <apache-poi.version>5.2.5</apache-poi.version>
        <!--        <apache-poi.version>4.1.2</apache-poi.version>-->

        <!-- Dependency versions -->
        <spring-expression.version>5.3.31</spring-expression.version>
        <common-utils.version>0.14.0</common-utils.version>
        <jetbrains-annotations.version>24.1.0</jetbrains-annotations.version>

        <!-- Test dependency versions -->
        <junit5.version>5.10.1</junit5.version>
        <assertj.version>3.24.2</assertj.version>
        <spock.version>2.3-groovy-4.0</spock.version>
        <lombok.version>1.18.30</lombok.version>
        <jmh.version>1.36</jmh.version>
        <byte-buddy.version>1.14.10</byte-buddy.version>
        <easy-random.version>4.3.0</easy-random.version>
        <excel-streaming-reader.version>4.2.0</excel-streaming-reader.version>
    </properties>

    <repositories>
        <!--
            Effective January 15, 2020, The Central Repository no longer supports insecure
            communication over plain HTTP and requires that all requests to the repository
            are encrypted over HTTPS.

            501 HTTPS Required.
            Use https://repo.maven.apache.org/maven2/
            More information at https://links.sonatype.com/central/501-https-required

            Return code is: 501 , ReasonPhrase:HTTPS Required.
            ERROR: Failed to parse POMs

            See https://support.sonatype.com/hc/en-us/articles/360041287334
        -->
        <repository>
            <id>maven-central</id>
            <name>Maven Central Repository</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>

        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- Common Utils -->
            <dependency>
                <groupId>io.github.imsejin</groupId>
                <artifactId>common-utils</artifactId>
                <version>${common-utils.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.code.gson</groupId>
                        <artifactId>gson</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.ini4j</groupId>
                        <artifactId>ini4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-compress</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--
                Apache POI

                It is a core dependency.
            -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${apache-poi.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--
                SpEL(Spring Expression Language)

                It is intransitive dependency.
            -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring-expression.version}</version>
                <optional>true</optional>
            </dependency>

            <!-- Jetbrains Annotations -->
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>${jetbrains-annotations.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>

            <!--
                Easy generator of object with random value

                DO NOT UPGRADE THIS LIBRARY.
                EASY-RANDOM IS BASED ON JDK 11 SINCE 5.0.0.
            -->
            <dependency>
                <groupId>org.jeasy</groupId>
                <artifactId>easy-random-core</artifactId>
                <version>${easy-random.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Byte Buddy -->
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${byte-buddy.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Excel Streaming Reader -->
            <dependency>
                <groupId>com.github.pjfanning</groupId>
                <artifactId>excel-streaming-reader</artifactId>
                <version>${excel-streaming-reader.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Junit 5 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit5.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit5.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit5.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- AssertJ -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

            <!--
                Spock Framework

                Mandatory dependencies for using Spock.
                This starts to support 'maven-surefire' since 2.0.
            -->
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>${spock.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- JMH(Java Microbenchmark Harness) generator -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <!--
            When only executes "mvn deploy -DperformRelease=true", release your libraries.
            It is prevent maven from executing goal "maven-gpg-plugin"
            to use this profile for release.
        -->
        <profile>
            <id>ossrh</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Attaches java source files for view -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Generates javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.6.3</version>
                        <configuration>
                            <!-- https://bugs.openjdk.java.net/browse/JDK-8212233 -->
                            <source>${java.version}</source>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Plugin for signing with GPG key -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!--
                Mandatory plugin for using Spock.
                It enables you to check test cases using Spock automatically.

                The gmavenplus plugin is used to compile Groovy code.
                To learn more about this plugin,
                visit https://github.com/groovy/GMavenPlus/wiki
            -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compileTests</goal>
                            <goal>addTestSources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <!-- Not to generate '*-tests.jar' containing test classes. -->
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Junit auto tester -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <testFailureIgnore>false</testFailureIgnore>
                    <!--
                        Only required if names of test classes don't match default Surefire patterns('*Test').
                        By default only files ending in 'Test' will be included, so also include support for
                        spock style naming convention. Oddly enough for Groovy files, '*Spec.groovy' does not work,
                        but '*Spec.java'.
                    -->
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Spec.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!--
                Jacoco

                Plugin for analyzing code coverage of test cases.
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- Plugin to hide dependencies highly vulnerable to conflict. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.5.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
